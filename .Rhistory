modelstring(structure) <- "[high_hc][sport][high_hg|sport:high_hc]"
# Grafico de la Red
plot.network <- function(structure, ht = "400px"){
nodes.uniq <- unique(c(structure$arcs[,1], structure$arcs[,2]))
nodes <- data.frame(id = nodes.uniq,
label = nodes.uniq,
color = "darkturquoise",
shadow = TRUE)
edges <- data.frame(from = structure$arcs[,1],
to = structure$arcs[,2],
arrows = "to",
smooth = TRUE,
shadow = TRUE,
color = "black")
return(visNetwork(nodes, edges, height = ht, width = "100%"))
}
plot.network(structure)
#Tomando soló los 3 deportes y las variables hc y hg
ais.sub <- ais[ais$sport %in% c("Netball", "Tennis", "W_Polo"), c("high_hc", "high_hg", "sport")]
ais.sub$sport <- factor(ais.sub$sport)
head(ais.sub)
bn.mod <- bn.fit(structure, data = ais.sub)
bn.mod
library(bnlearn)
library(DAAG)
library(ggplot2)
library(visNetwork)
library(dplyr)
library(tidyr)
library(hrbrthemes)
library(viridis)
library(bnlearn)
library(forcats)
ais <- ais
head(ais)
cat("Dimensiones de la base", dim(ais))
# Variables booleanas False si es mayor que la mediana
ais$high_hc <- as.factor(ais$hc > median(ais$hc))
ais$high_hg <- as.factor(ais$hg > median(ais$hg))
cat("Mediana de hematocritos : ", median(ais$hc) ,
"y Mediana de hemoglobina : ", median(ais$hg))
# Creacion del gráfico vacío
structure <- empty.graph(c("high_hc", "high_hg", "sport"))
# Relaciones manuales
modelstring(structure) <- "[high_hc][sport][high_hg|sport:high_hc]"
# Grafico de la Red
plot.network <- function(structure, ht = "400px"){
nodes.uniq <- unique(c(structure$arcs[,1], structure$arcs[,2]))
nodes <- data.frame(id = nodes.uniq,
label = nodes.uniq,
color = "darkturquoise",
shadow = TRUE)
edges <- data.frame(from = structure$arcs[,1],
to = structure$arcs[,2],
arrows = "to",
smooth = TRUE,
shadow = TRUE,
color = "black")
return(visNetwork(nodes, edges, height = ht, width = "100%"))
}
plot.network(structure)
#Tomando soló los 3 deportes y las variables hc y hg
ais.sub <- ais[ais$sport %in% c("Netball", "Tennis", "W_Polo"), c("high_hc", "high_hg", "sport")]
ais.sub$sport <- factor(ais.sub$sport)
head(ais.sub)
bn.mod <- bn.fit(structure, data = ais.sub)
bn.mod
structure <- empty.graph(c("high_hc", "high_hg", "sport"))
# Relaciones manuales
modelstring(structure) <- "[high_hc][sport][high_hg|sport:high_hc]"
# Grafico de la Red
plot.network <- function(structure, ht = "400px"){
nodes.uniq <- unique(c(structure$arcs[,1], structure$arcs[,2]))
nodes <- data.frame(id = nodes.uniq,
label = nodes.uniq,
color = "darkturquoise",
shadow = TRUE)
edges <- data.frame(from = structure$arcs[,1],
to = structure$arcs[,2],
arrows = "to",
smooth = TRUE,
shadow = TRUE,
color = "black")
return(visNetwork(nodes, edges, height = ht, width = "100%"))
}
plot.network(structure)
#Tomando soló los 3 deportes y las variables hc y hg
ais.sub <- ais[ais$sport %in% c("Netball", "Tennis", "W_Polo"), c("high_hc", "high_hg", "sport")]
ais
ais[ais$sport %in% c("Netball", "Tennis", "W_Polo"), c("high_hc", "high_hg", "sport")]
data(ais)
#Tomando soló los 3 deportes y las variables hc y hg
ais.sub <- ais[ais$sport %in% c("Netball", "Tennis", "W_Polo"), c("high_hc", "high_hg", "sport")]
ais <- ais
head(ais)
cat("Dimensiones de la base", dim(ais))
# Variables booleanas False si es mayor que la mediana
ais$high_hc <- as.factor(ais$hc > median(ais$hc))
ais$high_hg <- as.factor(ais$hg > median(ais$hg))
cat("Mediana de hematocritos : ", median(ais$hc) ,
"y Mediana de hemoglobina : ", median(ais$hg))
# Creacion del gráfico vacío
structure <- empty.graph(c("high_hc", "high_hg", "sport"))
# Relaciones manuales
modelstring(structure) <- "[high_hc][sport][high_hg|sport:high_hc]"
# Grafico de la Red
plot.network <- function(structure, ht = "400px"){
nodes.uniq <- unique(c(structure$arcs[,1], structure$arcs[,2]))
nodes <- data.frame(id = nodes.uniq,
label = nodes.uniq,
color = "darkturquoise",
shadow = TRUE)
edges <- data.frame(from = structure$arcs[,1],
to = structure$arcs[,2],
arrows = "to",
smooth = TRUE,
shadow = TRUE,
color = "black")
return(visNetwork(nodes, edges, height = ht, width = "100%"))
}
plot.network(structure)
#Tomando soló los 3 deportes y las variables hc y hg
ais.sub <- ais[ais$sport %in% c("Netball", "Tennis", "W_Polo"), c("high_hc", "high_hg", "sport")]
ais.sub$sport <- factor(ais.sub$sport)
head(ais.sub)
bn.mod <- bn.fit(structure, data = ais.sub)
bn.mod
head(ais.sub)
str(ais.sub)
write.csv(ais.sub,"ais_sub.csv")
getwd()
list.files()
write.csv(ais.sub,"ais_sub.csv", row.names = FALSE)
View(ais.sub)
View(ais.sub)
install.packages("BayesianNetwork")
clear
library(DAAG)
library(ggplot2)
library(visNetwork)
ais <- ais
2^(2)
library(data.table)
library(dplyr)
library(ggplot2)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(leaflet)
library(lubridate)
library(leaflet)
install.packages("leaflet")
library(leaflet)
leaflet() %>%
addTiles() %>%
fitBounds(-118.5,33.8,-118.25,34.15) %>%
addRectangles(-118.5,33.8,-118.25,34.15) %>%
addMiniMap()
5/7
6/7
5/7
7.5 + 4 + 6 + 7
7.5 + 4 + 6 + 7
(7.5 + 4 + 6 + 7)/4
6/30
10/30
10/60
6/30
10/30
.6*3
(7.5 + 4 + 6 + 7)/5
(7.5 + 4 + 6 + 7)/5 + .4
(7.5 + 4 + 6 + 8.5)/5 + .4
(7.5 + 7 + 6 + 8.5)/5 + .4
(7.5 + 7 + 6 + 8.5)/5 + .4
(7.5 + 7 + 6 + 9)/5 + .4
(7.5 + 7 + 4 + 9)/5 + .4
(7.5 + 7 + 6 + 9)/5 + .4
install.packages("waffle")
library(waffle)
library(dplyr)
iris %>% group_by(Species) %>% summarize(Conteo = n())
wafles(iris %>% group_by(Species) %>% summarize(Conteo = n()))
library(waffle)
waffle(iris %>% group_by(Species) %>% summarize(Conteo = n()))
nueva <- iris %>% group_by(Species) %>% summarize(Conteo = n())
nueva$Conteo
names(nueva$Conteo) <- nueva$Species
nueva
nueva <- nueva$Conteo
names(nueva$Conteo) <- nueva$Species
nueva <- iris %>% group_by(Species) %>% summarize(Conteo = n())
nueva_s <- nueva$Conteo
names(nueva_s) <- nueva$Species
nueva_s
waffle(nueva_s)
library(ggplot2)
nueav
nueva
ggplot(nueva, aes(x = Conteo, y = Species)) + geom_col() + coord_polar()
ggplot(nueva, aes(x = Conteo, y = Species)) + geom_col() + coord_polar() + theme_void()
ggplot(nueva, aes(x = 1, fill = conteo)) + geom_col(color 'Species') + coord_polar() + theme_void()
ggplot(nueva, aes(x = 1, fill = conteo)) + geom_col(color = 'Species') + coord_polar() + theme_void()
nueva
ggplot(nueva, aes(x = 1, fill = Conteo)) + geom_col(color = 'Species') + coord_polar() + theme_void()
ggplot(nueva, aes(x = 1, fill = Conteo)) + geom_col(color = 'white') + coord_polar() + theme_void()
ggplot(nueva, aes(x = 1, fill = Conteo, fill = Species)) + geom_col() + coord_polar() + theme_void()
ggplot(nueva, aes(x = 1, y = Conteo, fill = Species)) + geom_col() + coord_polar() + theme_void()
ggplot(nueva, aes(x = 1, y = Conteo, fill = Species)) + geom_col() + coord_polar(theta = "y") + theme_void()
#Grafica de correlación
#scale_log_10() suaviza los datos
#Conteo de NA
library(waffle)
library(dplyr)
nueva <- iris %>% group_by(Species) %>% summarize(Conteo = n())
nueva_s <- nueva$Conteo
names(nueva_s) <- nueva$Species
waffle(nueva_s)
ggplot(nueva, aes(x = 1, y = Conteo, fill = Species)) + geom_col() + coord_polar(theta = "y") + theme_void()
base_master_final <- read.csv("~/Documentos/Adsocial/base_master_final.csv")
View(base_master_final)
library(waffle)
library(dplyr)
nueva <- iris %>% group_by(Species) %>% summarize(Conteo = n())
nueva_s <- nueva$Conteo
names(nueva_s) <- nueva$Species
nueva_s
base_master_final %>% group_by(Plataforma) %>% summarize(Conteo = n())
nueva <- base_master_final %>% group_by(Plataforma) %>% summarize(Conteo = n())
nueva_s <- nueva$Conteo
names(nueva_s) <- nueva$Plataforma
nueva_s
waffle(nueva_s)
nueva <- iris %>% group_by(Species) %>% summarize(Conteo = n())
nueva_s <- nueva$Conteo
names(nueva_s) <- nueva$Species
waffle(nueva_s)
nueva_s
nueva <- base_master_final %>% group_by(Plataforma) %>% summarize(Conteo = n())
nueva_s <- nueva$Conteo
names(nueva_s) <- nueva$Plataforma
nueva <- iris %>% group_by(Species) %>% summarize(Conteo = n())
nueva_s <- nueva$Conteo
names(nueva_s) <- nueva$Species
waffle(nueva_s, rows = 5)
waffle(nueva_s, rows = 20)
waffle(nueva_s, rows = 50)
waffle(nueva_s, rows = 40)
waffle(nueva_s, rows = 30)
nueva <- base_master_final %>% group_by(Plataforma) %>% summarize(Conteo = n())
nueva_s <- nueva$Conteo
names(nueva_s) <- nueva$Plataforma
waffle(nueva_s,rows = 30)
nueva <- base_master_final %>% group_by(Plataforma) %>% summarize(Conteo = n())
ggplot(nueva, aes(x = 1, y = Conteo, fill = Species)) + geom_col() + coord_polar(theta = "y") + theme_void()
nueva <- base_master_final %>% group_by(Plataforma) %>% summarize(Conteo = n())
ggplot(nueva, aes(x = 1, y = Conteo, fill = Species)) + geom_col() + coord_polar(theta = "y") + theme_void()
ggplot(nueva, aes(x = 1, y = Conteo, fill = Plataforma)) + geom_col() + coord_polar(theta = "y") + theme_void()
nueva <- base_master_final %>% group_by(Plataforma) %>% summarize(Conteo = n(), dinero = sum(dinero_gastado))
nueva
View(base_master_final)
base_master_final$dinero_gastado
sum(base_master_final$dinero_gastado)
str(base_master_final)
sum(base_master_final$dinero_gastado)
sum(base_master_final$dinero_gastado, na.rm = FALSE)
sum(base_master_final$dinero_gastado, na.rm = TRUE)
nueva <- base_master_final %>% group_by(Plataforma) %>% summarize(Conteo = n(), dinero = sum(dinero_gastado, na.rm = TRUE))
nueva
ggplot(nueva, aes(x = 1, y = dinero, fill = Plataforma)) + geom_col() + coord_polar(theta = "y") + theme_void()
ggplot(nueva, aes(x = 1, y = dinero, fill = Plataforma)) + geom_col() + coord_polar(theta = "y") + theme_void() + ggtitle('dinero')
ggplot(nueva, aes(x = 1, y = Conteo, fill = Plataforma)) + geom_col() + coord_polar(theta = "y") + theme_void() + ggtitle('numero campañas')
nueva <- base_master_final %>%
group_by(Plataforma) %>%
summarize(Conteo = n(),
dinero = sum(dinero_gastado, na.rm = TRUE)
Impresiones = sum(Impresiones, na.rm = TRUE),
Clics = sum(Clics, na.rm = TRUE))
nueva <- base_master_final %>%
group_by(Plataforma) %>%
summarize(Conteo = n(),
dinero = sum(dinero_gastado, na.rm = TRUE),
Impresiones = sum(Impresiones, na.rm = TRUE),
Clics = sum(Clics, na.rm = TRUE))
nueva
ggplot(nueva, aes(x = 1, y = dinero, fill = Plataforma)) + geom_col() + coord_polar(theta = "y") + theme_void() + ggtitle('dinero')
ggplot(nueva, aes(x = 1, y = Conteo, fill = Plataforma)) + geom_col() + coord_polar(theta = "y") + theme_void() + ggtitle('numero campañas')
ggplot(nueva, aes(x = 1, y = Impresiones, fill = Plataforma)) + geom_col() + coord_polar(theta = "y") + theme_void() + ggtitle('Impresiones')
ggplot(nueva, aes(x = 1, y = Clics, fill = Plataforma)) + geom_col() + coord_polar(theta = "y") + theme_void() + ggtitle('Clics')
View(base_master_final)
View(nueva)
65*5
Ventas.Adsocial <- read.csv("~/Documentos/Adsocial/Ventas-Adsocial.csv")
View(Ventas.Adsocial)
Ventas.Adsocial <- read.csv("~/Documentos/Adsocial/Ventas-Adsocial.csv")
head(Ventas)
Ventas_Adsocial <- read.csv("~/Documentos/Adsocial/Ventas_Adsocial.csv")
Ventas_Adsocial <- read.csv("~/Documentos/Adsocial/Ventas_Adsocial.csv")
head(Ventas_Adsocial)
clear
library(ggplot2)
p1 <- qplot(mpg, wt, data = mtcars, colour = cyl)
p2 <- qplot(mpg, data = mtcars) + ggtitle("title")
p3 <- qplot(mpg, data = mtcars, geom = "dotplot")
p4 <-
p1 + facet_wrap( ~ carb, nrow = 1) + theme(legend.position = "none") +
ggtitle("facetted plot")
p1
p2
grid.arrange(p1, p2, nrow = 1)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2, nrow = 1)
library(plotly)
install.packages("renv")
renv::init()
renv::init()
renv::init(force = TRUE)
clear
library(dplyr)
library(tidyr)
library(ggplot2)
library(waffle)
setwd('/home/carlos/Documentos/Encuestas_UNAM/')
list.files()
encuestas <- read.csv('encuestas.csv')
encuestas$Pregunta <- as.character(encuestas$Pregunta)
encuestas$Opción <- as.character(encuestas$Opción)
encuestas$Edad <- as.factor(encuestas$Edad)
#table(encuestas$Pregunta)
conteo <- encuestas %>%
group_by(Opción) %>%
summarise(conteo = n())
conteo <- encuestas %>%
group_by(Facultad) %>%
summarise(conteo = n()) %>%
mutate(conteo, encuestados = conteo/12 , nueva = encuestados / sum(encuestados))
conteo
ggplot(conteo, aes(x = 1, y = nueva, fill = Facultad)) +
geom_col() +
coord_polar(theta = "y") +
geom_text(aes(label = encuestados), position = position_fill(vjust = 0.5)) +
theme_void() +
ggtitle('¿Qué piensan los Universitarios sobre el Derecho Animal?'
,subtitle = paste0('Encuestados: ' , sum(conteo$encuestados)))
conteo <- encuestas %>%
group_by(Sexo) %>%
summarise(conteo = n()) %>%
mutate(conteo, encuestados = conteo/12 , nueva = encuestados / sum(encuestados))
conteo
View(encuestas)
for(i in seq(12)){
eval(parse(text = paste0("encuestas$Pregunta[encuestas$Pregunta == ",i,"] <- 'Pregunta_",i,"'")))
}
head(encuestas)
tmp <- encuestas %>%
group_by(Pregunta) %>%
mutate(grouped_id = row_number()) %>%
select(-Edad,-Sexo,-Facultad,-Comentarios) %>%
spread(Pregunta, Opción) %>%
select(-grouped_id)
head(tmp)
Pregunta_1 <- tmp %>% group_by(Pregunta_1) %>% summarise(Conteo = n()) %>%
mutate(Porcentaje = paste0(round(Conteo/sum(Conteo),2)*100,'%'))
Pregunta_1
ggplot(Pregunta_1, aes(x = "", y = Conteo, fill = Pregunta_1, label = Conteo)) +
geom_bar(stat = "identity", position = position_fill()) +
geom_text(aes(label = Porcentaje), position = position_fill(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank()) +
ggtitle(paste0('¿Conoces de la existencia del derecho animal?'))
library(ggplot2) # Cargar la librería gráfica "ggplot2"
library(dplyr) # Cargar la librería de manipulación de dataframes "dplyr"
sexo <- c(rep("man",20),rep("woman",20),rep("man",20),rep("woman",20))
valor <- 1:80
grupo <- c(rep("spain",25),rep("italy",25),rep("portugal",30))
datos <- data.frame(sexo=sexo, valor=valor, grupo=grupo)
datos <- datos %>%
group_by(grupo, sexo) %>%
summarise(valor = sum(valor, na.rm = TRUE)) %>%
ungroup() %>%
mutate(grupo = factor(grupo, levels = .$grupo))
ggplot(datos, aes(grupo, valor, fill = sexo)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip()
datos
head(datos)
head(encuestas)
ggplot(encuestas, aes(Pregunta, Edad, fill = Opción)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip()
View(Pregunta_1)
Pregunta_1
ggplot(Pregunta_1, aes(Pregunta_1, Conteo)) +
geom_bar(stat = "identity", position = "dodge") +
coord_flip()
starwars
ggplot(starwars, aes(x = gender)) + geom_bar()
conteo_de_clase <- dplyr::count(starwars, gender)
ggplot(conteo_de_clase, aes(x = gender, y = n)) + geom_bar(stat = "identity")
ggplot(starwars, aes(x = height, y = mass)) + geom_point(color = "pink") + stat_summary(fun.y = "mean", geom = "line", size = 1, linetype = "dashed")
ggplot(starwars, aes(x = gender, fill = species)) + geom_bar()
ggplot(starwars, aes(x = gender, fill = species)) + geom_bar(position = "dodge")
ggplot(starwars, aes(x = gender, fill = species)) + geom_bar(position = "fill")
ggplot(starwars, aes(x = gender, fill = species)) + geom_bar(position = "fill") + scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent)
ggplot(starwars, aes(x = gender, fill = species)) + geom_bar(position = "fill") + scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) + coord_flip()
ggplot(starwars, aes(x = height, y = mass)) + geom_point(aes(color = gender)) + geom_smooth(se = FALSE) + facet_wrap(~ gender)
ggplot(starwars, aes(x = gender, fill = species)) + geom_bar(position = "fill") + scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) + labs(title = "Clasificacion starwars", subtitle = "Porcentaje del genero de las especies", x = "Porcentaje de Especies", y = "Generos", color = "species")
ggplot(starwars, aes(x = gender, fill = species)) + geom_bar(position = "fill") + scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) + coord_flip()
head(starwars)
head(encuestas)
ggplot(encuestas, aes(x = Pregunta, fill = Opción)) + geom_bar(position = "fill") + scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) + coord_flip()
Pregunta_1
setwd('/home/carlos/Documentos/Encuestas_UNAM/')
list.files()
encuestas <- read.csv('encuestas.csv')
setwd('/home/carlos/Documentos/Encuestas_UNAM/')
list.files()
encuestas <- read.csv('encuestas.csv')
encuestas <- read.csv('encuestas.csv')
View(encuestas)
ggplot(encuestas, aes(x = Pregunta_texto, fill = Opción)) + geom_bar(position = "fill") + scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) + coord_flip()
head(encuestas)
ggplot(encuestas, aes(x = Pregunta_texto, fill = Respuesta_texto)) + geom_bar(position = "fill") + scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) + coord_flip()
tmp <- encuestas %>%
group_by(Pregunta) %>%
mutate(grouped_id = row_number()) %>%
select(-Edad,-Sexo,-Facultad,-Comentarios) %>%
spread(Pregunta, Opción) %>%
select(-grouped_id)
head(tmp)
Pregunta_1 <- tmp %>% group_by(Pregunta_1) %>% summarise(Conteo = n()) %>%
mutate(Porcentaje = paste0(round(Conteo/sum(Conteo),2)*100,'%'))
Pregunta_1
ggplot(Pregunta_1, aes(x = "", y = Conteo, fill = Pregunta_1, label = Conteo)) +
geom_bar(stat = "identity", position = position_fill()) +
geom_text(aes(label = Porcentaje), position = position_fill(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank()) +
ggtitle(paste0('¿Conoces de la existencia del derecho animal?'))
ggplot(encuestas, aes(x = Pregunta_texto, fill = Respuesta_texto)) +
geom_bar(position = "fill") +
scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) +
coord_flip() +
facet_wrap(~Facultad)
ggplot(encuestas, aes(x = Pregunta_texto, fill = Opción)) +
geom_bar(position = "fill") +
scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) +
coord_flip() +
facet_wrap(~Facultad)
ggplot(encuestas, aes(x = Pregunta, fill = Opción)) +
geom_bar(position = "fill") +
scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) +
coord_flip() +
facet_wrap(~Facultad)
table(encuestas$Opción)
tmp <- encuestas %>%
group_by(Pregunta) %>%
mutate(grouped_id = row_number()) %>%
select(-Edad,-Sexo,-Facultad,-Comentarios) %>%
spread(Pregunta, Opción) %>%
select(-grouped_id)
head(tmp)
Pregunta_1 <- tmp %>% group_by(Pregunta_1) %>% summarise(Conteo = n()) %>%
mutate(Porcentaje = paste0(round(Conteo/sum(Conteo),2)*100,'%'))
Pregunta_1
ggplot(Pregunta_1, aes(x = "", y = Conteo, fill = Pregunta_1, label = Conteo)) +
geom_bar(stat = "identity", position = position_fill()) +
geom_text(aes(label = Porcentaje), position = position_fill(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank()) +
ggtitle(paste0('¿Conoces de la existencia del derecho animal?'))
View(encuestas)
table(encuestas$Opción)
table(encuestas$Respuesta_texto)
library(dplyr)
library(tidyr)
library(ggplot2)
library(waffle)
setwd('/home/carlos/Documentos/Encuestas_UNAM/')
list.files()
encuestas <- read.csv('encuestas.csv')
table(encuestas$Respuesta_texto)
table(encuestas$Opción)
ggplot(encuestas, aes(x = Pregunta, fill = Opción)) +
geom_bar(position = "fill") +
scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) +
coord_flip()
ggplot(encuestas, aes(x = Pregunta, fill = Opción)) + geom_bar(position = "fill") + scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) + coord_flip()
ggplot(encuestas, aes(x = Pregunta, fill = Opción)) + geom_bar(position = "fill")
ggplot(encuestas, aes(x = Pregunta, fill = Opción)) + geom_bar(position = "fill") + coord_flip()
encuestas$Pregunta <- as.character(encuestas$Pregunta)
encuestas$Opción <- as.character(encuestas$Opción)
encuestas$Edad <- as.factor(encuestas$Edad)
setwd('/home/carlos/Documentos/Encuestas_UNAM/')
list.files()
encuestas <- read.csv('encuestas.csv')
encuestas$Pregunta <- as.character(encuestas$Pregunta)
encuestas$Opción <- as.character(encuestas$Opción)
encuestas$Edad <- as.factor(encuestas$Edad)
ggplot(encuestas, aes(x = Pregunta, fill = Opción)) +
geom_bar(position = "fill") +
scale_y_continuous(breaks = seq(0,1, by = .2), labels = scales::percent) +
coord_flip() +
facet_wrap(~Facultad)
